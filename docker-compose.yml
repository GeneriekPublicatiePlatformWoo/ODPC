services:
  odpc:
    environment:
      - POSTGRES_HOST=postgres-db
      - POSTGRES_DB=ODPC
      - POSTGRES_PORT=5432
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=localdev
      - ASPNETCORE_FORWARDEDHEADERS_ENABLED=true
      - ODRC_BASE_URL=http://odrc.proxy/
      - ODRC_API_KEY=insecure-ea1a8d297e3b2d3313b8a30b18959c3
      - OIDC_ADMIN_ROLE=odpc-admin
    image: ${DOCKER_REGISTRY-}odpc
    build:
      context: .
      dockerfile: ODPC.Server/Dockerfile
    ports:
      - "62230:8080"
    depends_on:
      - postgres-db
      - odrc.proxy
  postgres-db:
    image: postgis/postgis:${PG_VERSION:-16-master}
    volumes:
      - postgres-db:/var/lib/postgresql/data
      - ./docker/odrc/db/init-db.sql:/docker-entrypoint-initdb.d/init_db.sql
      - ./docker/open-zaak/db/0001-init-open-zaak-db.sql:/docker-entrypoint-initdb.d/0001-init-open-zaak-db.sql
      - ./docker/open-zaak/db/0002-extensions.sh:/docker-entrypoint-initdb.d/0002-extensions.sh
    environment:
      - POSTGRES_PASSWORD=localdev
    restart: always
    ports:
      - "5432"
  redis:
    image: redis:7
    command: ["redis-server", "--appendonly", "yes"]
    volumes:
      - redis-data:/data

  openzaak-web.local:
    image: openzaak/open-zaak:${OPENZAAK_VERSION:-1.14.0}
    environment: &openzaak_web_env
      - DJANGO_SETTINGS_MODULE=openzaak.conf.patched_settings
      - SECRET_KEY=${SECRET_KEY:-django-insecure-^#9nzgn*@-@0szv+$$)6th!i+$$ks^+bt@&ejcgzqt==7af(a(u3}
      - ALLOWED_HOSTS=openzaak-web.local,openzaak.docker.internal,localhost
      - DB_NAME=openzaak
      - DB_USER=postgres
      - DB_PASSWORD=localdev
      - DB_HOST=postgres-db
      - IS_HTTPS=no
      - CACHE_DEFAULT=redis:6379/1
      - CACHE_AXES=redis:6379/1
      - SUBPATH=${SUBPATH:-/}
      - OPENZAAK_SUPERUSER_USERNAME=admin
      - DJANGO_SUPERUSER_PASSWORD=admin
      - OPENZAAK_SUPERUSER_EMAIL=admin@localhost
      - DISABLE_2FA=true
      - CELERY_BROKER_URL=redis://redis:6379/2
      - CELERY_RESULT_BACKEND=redis://redis:6379/2
      - NOTIFICATIONS_DISABLED=true
      - JWT_EXPIRY=99999999999 # Roughly 3170 years. This is required for tests with time frozen to work
      - CELERY_WORKER_CONCURRENCY=${CELERY_WORKER_CONCURRENCY:-2}
      - DEBUG=True
    volumes:
      &openzaak_web_volumes # mount fixtures dir to automatically populate the DB
      - ./docker/open-zaak/fixtures/:/app/fixtures
      - ./docker/open-zaak/patched_settings.py:/app/src/openzaak/conf/patched_settings.py
      - oz-media:/app/media # Shared media volume to get access to saved OAS files
      - oz-private-media:/app/private-media
    depends_on:
      - postgres-db
      - redis
      - openzaak-celery
    ports:
      - 8000

  openzaak-celery:
    image: openzaak/open-zaak:${OPENZAAK_VERSION:-1.14.0}
    environment: *openzaak_web_env
    volumes: *openzaak_web_volumes
    command: /celery_worker.sh
    depends_on:
      - postgres-db
      - redis

  odrc.local: &odrc_build
    image: maykinmedia/woo-publications:${ODRC_VERSION:-latest}
    pull_policy: always
    environment: &odrc_env
      - DJANGO_SETTINGS_MODULE=woo_publications.conf.docker
      - SECRET_KEY=${SECRET_KEY:-django-insecure-fgggi4*bl2wdg&@0&)t7ewy5-2!b3l4lhx4_+^zpw%x2i28v8}
      - DB_NAME=woo_publications
      - DB_USER=postgres
      - DB_HOST=postgres-db
      - DB_PASSWORD=localdev
      - CACHE_DEFAULT=redis:6379/0
      - CACHE_AXES=redis:6379/0
      - ODRC_SUPERUSER_USERNAME=admin
      - ODRC_SUPERUSER_EMAIL=admin@host.docker.internal
      - DISABLE_2FA=true
      - DJANGO_SUPERUSER_PASSWORD=admin
      - ALLOWED_HOSTS=*
      # Environment labeling
      - SHOW_ENVIRONMENT=yes
      - ENVIRONMENT_LABEL=docker-compose
      - ENVIRONMENT_BACKGROUND_COLOR=#1d63ed
      - ENVIRONMENT_FOREGROUND_COLOR=white
      - DEBUG=True
    volumes: &odrc_volumes
      - ./docker/odrc/fixtures/:/app/fixtures
      - media:/app/media
      - log:/app/log
    ports:
      - 8000
    depends_on:
      - postgres-db
      - redis

# we need a reverse proxy for odrc because django doesn't support chunked requests
  odrc.proxy:
    image: nginx:stable-alpine
    restart: always
    ports:
      - 80
    volumes: 
      - ./docker/nginx:/etc/nginx/conf.d/
    depends_on:
      - odrc.local

volumes:
  postgres-db:
  redis-data:
  oz-media:
  oz-private-media:
  log:
  media:
